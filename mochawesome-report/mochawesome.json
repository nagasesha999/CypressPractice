{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2021-05-16T00:24:01.289Z",
    "end": "2021-05-16T00:24:06.854Z",
    "duration": 5565,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2b3f2920-2b6b-41bb-8ab1-81e0b143990c",
      "title": "",
      "fullFile": "cypress/integration/GreenKart/Test2.js",
      "file": "cypress/integration/GreenKart/Test2.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "31e669cd-9033-4e2c-af4a-455fefdd199e",
          "title": "My First Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "launch rahul setty site",
              "fullTitle": "My First Test launch rahul setty site",
              "timedOut": null,
              "duration": 3824,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://rahulshettyacademy.com/seleniumPractise/#/\");\ncy.get('input[placeholder=\"Search for Vegetables and Fruits\"]').type('ca');\ncy.get('.products').as('products'); // click specific element using list \ncy.get('@products').find('.product').each(($el, index, $list) => {\n  const veg = $el.find('h4[class=\"product-name\"]').text();\n  if (veg.includes('Cashews')) {\n    cy.wrap($el).find('button').click();\n  }\n}); // to get the text from the selected element\n// bellow step is invalid. cypress promise is resoved if you using like this this is not cypress command\n// const textFromLogo = cy.get('.brand.greenLogo').text()\n// cy.log(textFromLogo)\n// if you handle promise by manualy like below step. then we can print the text from selected element\ncy.get('.brand.greenLogo').then(function (logoText) {\n  cy.log(logoText.text());\n});\ncy.get('.brand.greenLogo').should('have.text', 'GREENKART');\ncy.get('.cart-icon > img').click();\ncy.contains('PROCEED TO CHECKOUT').click();\ncy.contains('Place Order').click();",
              "err": {},
              "uuid": "8001e366-7717-45f7-b081-9086d431c608",
              "parentUUID": "31e669cd-9033-4e2c-af4a-455fefdd199e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8001e366-7717-45f7-b081-9086d431c608"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3824,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}